{"version":3,"sources":["components/Filter/Filter.module.scss","components/Container/Container.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/Container/Container.js","components/Layout/Layout.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Layout","INITIAL_STATE","name","number","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","Form","htmlFor","Label","LabelText","id","type","onChange","placeholder","pattern","title","required","Input","Button","Component","Filter","onDeleteContact","onClick","ContactItem","Contact","ContactName","ContactList","contacts","map","App","filter","addContact","contact","includes","alert","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","deleteContact","contactId","prevState","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,UAAY,0BAA0B,MAAQ,wB,mBCA9FD,EAAOC,QAAU,CAAC,UAAY,+B,kBCA9BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,UAAY,+BAA+B,MAAQ,2BAA2B,OAAS,8B,kBCA7KD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,QAAU,6BAA6B,YAAc,iCAAiC,OAAS,8B,mLCYhMC,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,KCKtBI,EANA,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAH,OAAkB,cAAC,EAAD,UAAYA,K,+CCCvCK,EAAgB,CACpBC,KAAM,GACNC,OAAQ,IA8EKC,E,4MA1EbC,M,eAAaJ,G,EAEbK,YAAcC,IAAQC,W,EAEtBC,cAAgBF,IAAQC,W,EAExBE,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRT,EAAgBS,EAAhBT,KAAMU,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBX,EAAOU,K,EAQ1BE,aAAe,SAAAC,GACbA,EAAEC,iBAIF,EAAKC,MAAMC,SAAX,eAAyB,EAAKb,QAC9B,EAAKc,S,EAGPA,MAAQ,WACN,EAAKN,SAAL,eAAmBZ,K,4CAGrB,WACE,MAAyBmB,KAAKf,MAAtBH,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAEd,OACE,uBAAMe,SAAUE,KAAKN,aAAcjB,UAAWC,IAAOuB,KAArD,UACE,wBAAOC,QAASF,KAAKd,YAAaT,UAAWC,IAAOyB,MAApD,UACE,sBAAM1B,UAAWC,IAAO0B,UAAxB,kBACA,uBACEC,GAAIL,KAAKd,YACToB,KAAK,OACLxB,KAAK,OACLU,MAAOV,EACPyB,SAAUP,KAAKV,aACfkB,YAAY,aACZC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRlC,UAAWC,IAAOkC,WAItB,wBAAOV,QAASF,KAAKX,cAAeZ,UAAWC,IAAOyB,MAAtD,UACE,sBAAM1B,UAAWC,IAAO0B,UAAxB,oBACA,uBACEC,GAAIL,KAAKX,cACTiB,KAAK,MACLxB,KAAK,SACLU,MAAOT,EACPwB,SAAUP,KAAKV,aACfkB,YAAY,eACZC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRlC,UAAWC,IAAOkC,WAItB,wBAAQN,KAAK,SAAS7B,UAAWC,IAAOmC,OAAxC,gC,GAnEkBC,a,iBCYXC,EAnBA,SAAC,GAAyB,IAAvBvB,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,SACvB,OACE,wBAAO9B,UAAWC,IAAOyB,MAAzB,UACE,sBAAM1B,UAAWC,IAAO0B,UAAxB,mCACA,uBACEE,KAAK,OACLxB,KAAK,OACLU,MAAOA,EACPe,SAAUA,EACVC,YAAY,aACZC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRlC,UAAWC,IAAOkC,Y,gBCXpBC,EAAS,SAAC,GAAD,IAAGG,EAAH,EAAGA,gBAAH,OACb,wBAAQC,QAASD,EAAiBvC,UAAWC,IAAOmC,OAApD,qBAKIK,EAAc,SAAC,GAAD,IAAGpC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQiC,EAAjB,EAAiBA,gBAAjB,OAClB,qBAAIvC,UAAWC,IAAOwC,YAAtB,UACE,oBAAGzC,UAAWC,IAAOyC,QAArB,UACE,uBAAM1C,UAAWC,IAAO0C,YAAxB,UAAsCtC,EAAtC,OADF,IACuDC,KAEvD,cAAC,EAAD,CAAQiC,gBAAiBA,QA4BdK,EAxBK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUN,EAAb,EAAaA,gBAAb,OAClB,oBAAIvC,UAAWC,IAAO2C,YAAtB,SACGC,EAASC,KAAI,gBAAGlB,EAAH,EAAGA,GAAIvB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEED,KAAMA,EACNC,OAAQA,EACRiC,gBAAiB,kBAAMA,EAAgBX,KAHlCA,SCyDEmB,G,kNApEbvC,MAAQ,CACNqC,SAAU,CACR,CAAEjB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEsB,GAAI,OAAQvB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEsB,GAAI,OAAQvB,KAAM,iBAAkBC,OAAQ,cAEhD0C,OAAQ,I,EAGVC,WAAa,YAAuB,IAApB5C,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACZuC,EAAa,EAAKrC,MAAlBqC,SAEFK,EAAU,CACdtB,GAAIlB,IAAQC,WACZN,OACAC,UAGGuC,EAASC,KAAI,SAAAI,GAAO,OAAIA,EAAQ7C,QAAM8C,SAASD,EAAQ7C,MAK1D+C,MAAM,GAAD,OAAIF,EAAQ7C,KAAZ,4BAJL,EAAKW,UAAS,gBAAG6B,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEK,GAAH,mBAAeL,S,EAO7BQ,aAAe,SAAAnC,GACb,EAAKF,SAAS,CAAEgC,OAAQ9B,EAAEJ,OAAOC,S,EAGnCuC,mBAAqB,WACnB,MAA6B,EAAK9C,MAA1BqC,EAAR,EAAQA,SAEFU,EAFN,EAAkBP,OAEcQ,cAChC,OAAOX,EAASG,QAAO,SAAAE,GAAO,OAC5BA,EAAQ7C,KAAKmD,cAAcL,SAASI,O,EAIxCE,cAAgB,SAAAC,GACd,EAAK1C,UAAS,SAAA2C,GAAS,MAAK,CAC1Bd,SAAUc,EAAUd,SAASG,QAAO,SAAAE,GAAO,OAAIA,EAAQtB,KAAO8B,U,4CAIlE,WACE,IAAQV,EAAWzB,KAAKf,MAAhBwC,OAEFY,EAAmBrC,KAAK+B,qBAE9B,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAajC,SAAUE,KAAK0B,aAE5B,0CACA,cAAC,EAAD,CAAQlC,MAAOiC,EAAQlB,SAAUP,KAAK8B,eACtC,cAAC,EAAD,CACER,SAAUe,EACVrB,gBAAiBhB,KAAKkC,uB,GA9DdpB,c,YCLlBwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.87df0119.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__3kh65\",\"LabelText\":\"Filter_LabelText__3Wqpr\",\"Input\":\"Filter_Input__UVEna\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1fIfw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__2PCLc\",\"Label\":\"ContactForm_Label__2g8c2\",\"LabelText\":\"ContactForm_LabelText__1tE6q\",\"Input\":\"ContactForm_Input__2SIJi\",\"Button\":\"ContactForm_Button__3KyYu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__WorHU\",\"ContactItem\":\"ContactList_ContactItem__1XN5U\",\"Contact\":\"ContactList_Contact__2fAnT\",\"ContactName\":\"ContactList_ContactName__18Td-\",\"Button\":\"ContactList_Button__3DCrr\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Container.module.scss';\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Container from '../Container';\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React, { Component } from 'react';\n\nimport shortid from 'shortid';\n\nimport styles from './ContactForm.module.scss';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  nameInputId = shortid.generate();\n\n  numberInputId = shortid.generate();\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  //   handleInputChange = e => {\n  //     const { name, value } = e.target;\n  //     this.setState({ [name]: value });\n  //   };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // const { name, number } = this.state;\n\n    this.props.onSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.Form}>\n        <label htmlFor={this.nameInputId} className={styles.Label}>\n          <span className={styles.LabelText}>Name</span>\n          <input\n            id={this.nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            placeholder=\"Enter name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            className={styles.Input}\n          />\n        </label>\n\n        <label htmlFor={this.numberInputId} className={styles.Label}>\n          <span className={styles.LabelText}>Number</span>\n          <input\n            id={this.numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            placeholder=\"Enter number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            className={styles.Input}\n          />\n        </label>\n\n        <button type=\"submit\" className={styles.Button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\n\nimport styles from './Filter.module.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={styles.Label}>\n      <span className={styles.LabelText}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        onChange={onChange}\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        className={styles.Input}\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './ContactList.module.scss';\n\nconst Button = ({ onDeleteContact }) => (\n  <button onClick={onDeleteContact} className={styles.Button}>\n    Delete\n  </button>\n);\n\nconst ContactItem = ({ name, number, onDeleteContact }) => (\n  <li className={styles.ContactItem}>\n    <p className={styles.Contact}>\n      <span className={styles.ContactName}>{name}:</span> {number}\n    </p>\n    <Button onDeleteContact={onDeleteContact} />\n  </li>\n);\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.ContactList}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactItem\n        key={id}\n        name={name}\n        number={number}\n        onDeleteContact={() => onDeleteContact(id)}\n      />\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\n\nimport Layout from '../components/Layout';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\n\nimport shortid from 'shortid';\n\nimport styles from './App.module.scss';\n\n// import './App.scss';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (!contacts.map(contact => contact.name).includes(contact.name)) {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    } else {\n      alert(`${contact.name} is already in contacts`);\n    }\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.getVisibleContacts();\n\n    return (\n      <Layout>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}